services:
  db:
    image: postgres:16
    restart: always
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yeework
      POSTGRES_DB: db
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app-network

  backend:
    container_name: backend
    depends_on:
      - db
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.backend
    ports:
      - "8081:8081"
    volumes:
      - upload_folder:/app/uploads
      - logs:/app/logs
    networks:
      - app-network

  ui:
    restart: always
    depends_on:
      - backend
    container_name: ui
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.ui
    networks:
      - app-network

  nginx:
    restart: always
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ui
    networks:
      - app-network
    volumes:
      - upload_folder:/usr/local/uploads
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "sleep 10 &&
             certbot certonly --webroot --webroot-path=/var/www/certbot
             --email your-email@example.com --agree-tos --no-eff-email
             -d yourdomain.com"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  upload_folder:
  logs:
